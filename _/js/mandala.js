// Generated by CoffeeScript 1.3.3
(function() {
  var Circles, Mandala;

  Circles = (function() {

    function Circles(mandala) {
      var _this = this;
      this.mandala = mandala;
      this.num_circles = 6;
      this.radius = Math.floor(this.mandala.avg / 3);
      this.radii = Math.floor(this.mandala.avg / 15);
      this.circle_jerker = $('#num_circles');
      this.circle_jerker.attr('value', this.num_circles);
      this.circle_jerker.change(function(event) {
        _this.num_circles = _this.circle_jerker.attr('value');
        return _this.mandala.draw();
      });
      this.radius_jerker = $('#radius');
      this.radius_jerker.attr('value', this.radius);
      this.radius_jerker.change(function(event) {
        _this.radius = _this.radius_jerker.attr('value');
        return _this.mandala.draw();
      });
      this.radii_jerker = $('#radii');
      this.radii_jerker.attr('value', this.radii);
      this.radii_jerker.change(function(event) {
        _this.radii = _this.radii_jerker.attr('value');
        return _this.mandala.draw();
      });
    }

    Circles.prototype.draw = function() {
      var angle, i, x, y, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.num_circles; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        angle = ((2.0 * Math.PI / this.num_circles) * i) + this.mandala.offset;
        x = this.radius * Math.sin(angle);
        y = this.radius * Math.cos(angle);
        this.mandala.canvas.beginPath();
        this.mandala.canvas.arc(this.mandala.mid.x + x, this.mandala.mid.y + y, this.radii, 0, 2.0 * Math.PI);
        _results.push(this.mandala.canvas.stroke());
      }
      return _results;
    };

    return Circles;

  })();

  Mandala = (function() {

    function Mandala(id) {
      var _this = this;
      this.canvas_el = $("#" + id).get(0);
      this.canvas = this.canvas_el.getContext('2d');
      this.width = 400;
      this.height = 400;
      this.mid = {
        x: this.width / 2,
        y: this.height / 2
      };
      this.avg = (this.height + this.width) / 2;
      this.step = 0.010;
      this.offset = 0.0;
      this.going = false;
      this.circles = new Circles(this);
      this.speed = $('#speed');
      this.speed.attr('value', this.step * 1000);
      this.speed.change(function(event) {
        _this.step = _this.speed.attr('value') / 1000;
        return null;
      });
      this.toggler = $('#go');
      this.toggler.click(function(event) {
        if (_this.going) {
          return _this.stop();
        } else {
          return _this.go();
        }
      });
      this.animate_interval = null;
      if (this.going) {
        this.go();
      } else {
        this.draw();
        this.stop();
      }
    }

    Mandala.prototype.go = function() {
      var _this = this;
      if (!this.animate_interval) {
        this.animate_interval = setInterval((function() {
          _this.draw();
          return _this.offset += _this.step;
        }), 1000.0 / 30.0);
      }
      this.toggler.attr('value', 'Stop');
      return this.going = true;
    };

    Mandala.prototype.stop = function() {
      if (this.animate_interval) {
        clearInterval(this.animate_interval);
      }
      this.animate_interval = null;
      this.toggler.attr('value', 'Start');
      return this.going = false;
    };

    Mandala.prototype.draw = function() {
      this.canvas.clearRect(0, 0, this.height, this.width);
      return this.circles.draw();
    };

    return Mandala;

  })();

  $(window).ready(function() {
    var m;
    return m = new Mandala('mandala-canvas');
  });

}).call(this);
